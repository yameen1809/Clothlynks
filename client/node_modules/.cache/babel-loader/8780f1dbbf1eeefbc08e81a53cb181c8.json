{"ast":null,"code":"var _jsxFileName = \"E:\\\\Works\\\\KazSoftware\\\\CompleteReactDeveloper2020\\\\eCommerceProject\\\\e-clothing\\\\client\\\\src\\\\components\\\\stripe-button\\\\stripe-button.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\nimport { clearCart } from \"../../redux/cart/cart.actions.js\";\n\nconst StripeCheckoutButton = ({\n  price\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_tzj2KhAfDnf1FkiPW1WO6LVD00SjoZUXDG\";\n\n  const onToken = token => {\n    axios({\n      url: \"payment\",\n      method: \"post\",\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    }).then(response => {\n      alert(\"Payment was successful\");\n      clearCart();\n    }).catch(error => {\n      console.log(\"Payment Error: \", error);\n      alert(\"There was an issue with your payment! Please make sure you use the provided credit cards.\");\n    });\n  };\n\n  return React.createElement(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"CRWN Clothing Ltd.\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"https://svgshare.com/i/CUz.svg\",\n    description: `Your total is $${price}`,\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n});\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);","map":{"version":3,"sources":["E:/Works/KazSoftware/CompleteReactDeveloper2020/eCommerceProject/e-clothing/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","connect","StripeCheckout","axios","clearCart","StripeCheckoutButton","price","priceForStripe","publishableKey","onToken","token","url","method","data","amount","then","response","alert","catch","error","console","log","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kCAA1B;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1C,QAAMC,cAAc,GAAGD,KAAK,GAAG,GAA/B;AACA,QAAME,cAAc,GAAG,4CAAvB;;AAEA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACvBP,IAAAA,KAAK,CAAC;AACJQ,MAAAA,GAAG,EAAE,SADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEP,cADJ;AAEJG,QAAAA;AAFI;AAHF,KAAD,CAAL,CAQGK,IARH,CAQQC,QAAQ,IAAI;AAChBC,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACAb,MAAAA,SAAS;AACV,KAXH,EAYGc,KAZH,CAYSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAA/B;AACAF,MAAAA,KAAK,CACH,2FADG,CAAL;AAGD,KAjBH;AAkBD,GAnBD;;AAqBA,SACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,oBAFP;AAGE,IAAA,cAAc,MAHhB;AAIE,IAAA,eAAe,MAJjB;AAKE,IAAA,KAAK,EAAC,gCALR;AAME,IAAA,WAAW,EAAG,kBAAiBX,KAAM,EANvC;AAOE,IAAA,MAAM,EAAEC,cAPV;AAQE,IAAA,UAAU,EAAC,SARb;AASE,IAAA,KAAK,EAAEE,OATT;AAUE,IAAA,SAAS,EAAED,cAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAcD,CAvCD;;AAyCA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACtCnB,EAAAA,SAAS,EAAE,MAAMmB,QAAQ,CAACnB,SAAS,EAAV;AADa,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCjB,oBAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\nimport { clearCart } from \"../../redux/cart/cart.actions.js\";\n\nconst StripeCheckoutButton = ({ price }) => {\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_tzj2KhAfDnf1FkiPW1WO6LVD00SjoZUXDG\";\n\n  const onToken = token => {\n    axios({\n      url: \"payment\",\n      method: \"post\",\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    })\n      .then(response => {\n        alert(\"Payment was successful\");\n        clearCart();\n      })\n      .catch(error => {\n        console.log(\"Payment Error: \", error);\n        alert(\n          \"There was an issue with your payment! Please make sure you use the provided credit cards.\"\n        );\n      });\n  };\n\n  return (\n    <StripeCheckout\n      label=\"Pay Now\"\n      name=\"CRWN Clothing Ltd.\"\n      billingAddress\n      shippingAddress\n      image=\"https://svgshare.com/i/CUz.svg\"\n      description={`Your total is $${price}`}\n      amount={priceForStripe}\n      panelLabel=\"Pay Now\"\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n});\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);\n"]},"metadata":{},"sourceType":"module"}